import telebot
import json
import os
from datetime import datetime

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot_token = '6910923926:AAFcgCawjsfhuxVzWetDBSCuau4nuIybFnU'
admin_id = 6578018656  # –í–∞—à ID Telegram
channel_id = '@GameDevAssetsHub'  # ID –∫–∞–Ω–∞–ª–∞, –∫—É–¥–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
bot = telebot.TeleBot(bot_token)

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
data_file = 'bot_data.json'

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON —Ñ–∞–π–ª–∞
def load_data():
    if not os.path.exists(data_file):
        return {}
    with open(data_file, 'r') as f:
        return json.load(f)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ JSON —Ñ–∞–π–ª
def save_data(data):
    with open(data_file, 'w') as f:
        json.dump(data, f, ensure_ascii=False, indent=4)

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
data = load_data()

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    user_id = str(message.chat.id)
    if user_id not in data:
        data[user_id] = {
            'balance': 0.0,
            'tasks': {
                'subscriptions': 0,
                'views': 0,
                'bots': 0,
                'groups': 0,
                'links': 0
            },
            'bonuses': 0,
            'joined': str(datetime.now().date())
        }
        save_data(data)
    
    bot.send_message(message.chat.id, "üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=main_menu())

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('üíµ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å', 'üì± –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç')
    markup.row('üë• –ü–∞—Ä—Ç–Ω—ë—Ä—ã', 'üìö –û –±–æ—Ç–µ')
    if str(admin_id) == str(admin_id):  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞
        markup.row('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ')
    return markup

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ' (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
@bot.message_handler(func=lambda message: message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ')
def send_payment_request(message):
    if message.chat.id == admin_id:
        markup = telebot.types.InlineKeyboardMarkup()
        # –í callback_data –ø–µ—Ä–µ–¥–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å
        markup.add(telebot.types.InlineKeyboardButton("üîò –ù–∞—á–∏—Å–ª–∏—Ç—å 0.01‚ÇΩ", callback_data=f"add_payment_{message.chat.id}"))
        bot.send_message(channel_id, "–î–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É:", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É "–ù–∞—á–∏—Å–ª–∏—Ç—å 0.01‚ÇΩ"
@bot.callback_query_handler(func=lambda call: call.data.startswith("add_payment_"))
def add_payment_callback(call):
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ callback_data
    user_id = call.data.split('_')[2]
    if user_id in data:
        data[user_id]['balance'] += 0.01
        save_data(data)
        bot.answer_callback_query(call.id, "–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ 0.01‚ÇΩ")
        bot.edit_message_text("‚úÖ –ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ 0.01‚ÇΩ", chat_id=call.message.chat.id, message_id=call.message.message_id)
    else:
        bot.answer_callback_query(call.id, "–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ 'üíµ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å'
@bot.message_handler(func=lambda message: message.text == 'üíµ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å')
def earn(message):
    bot.send_message(message.chat.id, "üöÄ –ö–∞–∫ –í—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å?", reply_markup=main_menu())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ 'üì± –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç'
@bot.message_handler(func=lambda message: message.text == 'üì± –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç')
def my_cabinet(message):
    user_data = data.get(str(message.chat.id), {})
    bot.send_message(message.chat.id, f"üì± –í–∞—à –∫–∞–±–∏–Ω–µ—Ç:\n\n"
                                      f"üí≥ –ë–∞–ª–∞–Ω—Å: {user_data.get('balance', 0.0)}‚ÇΩ", reply_markup=main_menu())

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
