from src.config import dispatcher
from aiogram.types import CallbackQuery
from aiogram.dispatcher.storage import FSMContext
from src.services.database_service import db_service
from src.helpers import states
from src.utils import keyboards
from src.helpers import filters


@dispatcher.callback_query_handler(filters.UserIsChannelSubscriber(),
                                   filters.UserWithSubscribe(),
                                   lambda msg: msg.data == 'grabber',
                                   state='*')
async def grabber_settings_handler(msg: CallbackQuery, state: FSMContext):
    await state.finish()

    await msg.message.edit_text(text=db_service.get_grabber_menu(msg.from_user.id),
                                reply_markup=keyboards.grabber)


@dispatcher.callback_query_handler(lambda msg: msg.data == 'source_params')
async def source_params_handler(msg: CallbackQuery, state: FSMContext):
    answer = ('‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤\n\n'
              '–ù–∞–∂–∏–º–∞—è –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫ –æ–Ω –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º—ã:\n'
              'üü¢ - –ú–æ–¥–µ—Ä–∞—Ü–∏—è\n'
              'üî¥ - –ù–µ –º–æ–¥–µ—Ä–∏—Ä—É–µ—Ç—Å—è\n'
              '‚ö´Ô∏è - –û—Ç–∫–ª—é—á—ë–Ω')
    await msg.message.edit_text(text=answer,
                                reply_markup=db_service.get_sources_params_reply_markup(msg.from_user.id))


@dispatcher.callback_query_handler(lambda msg: msg.data.startswith('change_moderated_'))
async def change_moderated_handler(msg: CallbackQuery):
    chanel_id = msg.data.split('change_moderated_')[1]
    db_service.change_moderated_status(chanel_id)

    await msg.message.edit_reply_markup(reply_markup=db_service.get_sources_params_reply_markup(msg.from_user.id))


@dispatcher.callback_query_handler(filters.UserIsChannelSubscriber(),
                                   filters.UserWithSubscribe(),
                                   lambda msg: msg.data == 'grabber_settings',
                                   state='*')
async def grabber_settings_handler(msg: CallbackQuery, state: FSMContext):
    await state.finish()
    await msg.message.edit_text(text='‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä–∞–±–±–µ—Ä–∞', reply_markup=keyboards.grabber_settings)


@dispatcher.callback_query_handler(filters.UserIsChannelSubscriber(),
                                   filters.UserWithSubscribe(),
                                   lambda msg: msg.data == 'sources')
async def grabber_settings_handler(msg: CallbackQuery):
    await msg.message.edit_text(text=db_service.get_sources_menu(msg.from_user.id),
                                reply_markup=keyboards.sources)


@dispatcher.callback_query_handler(filters.UserIsChannelSubscriber(),
                                   filters.UserWithSubscribe(),
                                   lambda msg: msg.data == 'postfix')
async def grabber_settings_handler(msg: CallbackQuery):
    await msg.message.edit_text(text=db_service.get_postfix_menu(msg.from_user.id),
                                reply_markup=keyboards.postfix)


@dispatcher.callback_query_handler(filters.UserIsChannelSubscriber(),
                                   filters.UserWithSubscribe(),
                                   lambda msg: msg.data == 'add_source')
async def add_source_handler(msg: CallbackQuery):
    await states.GrabberSettings.add_source.set()

    answer = 'üîó –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª'
    await msg.message.edit_text(text=answer)


@dispatcher.callback_query_handler(filters.UserIsChannelSubscriber(),
                                   filters.UserWithSubscribe(),
                                   lambda msg: msg.data == 'delete_source')
async def delete_source_handler(msg: CallbackQuery):
    answer = 'üóëÔ∏è –í—ã–±–µ—Ä–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è'
    await msg.message.edit_text(text=answer,
                                reply_markup=db_service.get_sources_reply_markup(msg.from_user.id))

    await states.GrabberSettings.delete_source.set()


@dispatcher.callback_query_handler(filters.UserIsChannelSubscriber(),
                                   filters.UserWithSubscribe(),
                                   state=states.GrabberSettings.delete_source)
async def delete_source_handler(msg: CallbackQuery, state: FSMContext):
    answer = '‚úÖÔ∏è –ò—Å—Ç–æ—á–Ω–∏–∫ —É–¥–∞–ª—ë–Ω'
    db_service.delete_source(msg.data)
    await msg.answer(text=answer)

    await msg.message.edit_text(text=db_service.get_sources_menu(msg.from_user.id),
                                reply_markup=keyboards.sources)
    await state.finish()


@dispatcher.callback_query_handler(filters.UserIsChannelSubscriber(),
                                   filters.UserWithSubscribe(),
                                   lambda msg: msg.data == 'words_filters', state='*')
async def words_filters_handler(msg: CallbackQuery, state: FSMContext):
    await state.finish()
    answer = db_service.get_words_filters_menu(msg.from_user.id)

    await msg.message.edit_text(text=answer, reply_markup=keyboards.words_filters)


@dispatcher.callback_query_handler(filters.UserIsChannelSubscriber(),
                                   filters.UserWithSubscribe(),
                                   lambda msg: msg.data == 'add_stop_word')
async def add_stop_word_handler(msg: CallbackQuery):
    answer = 'üöÄ –û—Ç–ø—Ä–∞–≤—å —Å—Ç–æ–ø-—Å–ª–æ–≤–æ'
    await msg.message.edit_text(text=answer)

    await states.GrabberSettings.add_stop_word.set()


@dispatcher.callback_query_handler(filters.UserIsChannelSubscriber(),
                                   filters.UserWithSubscribe(),
                                   lambda msg: msg.data == 'delete_stop_word')
async def delete_stop_word_handler(msg: CallbackQuery):
    answer = 'üóëÔ∏è –í—ã–±–µ—Ä–∏ —Å—Ç–æ–ø-—Å–ª–æ–≤–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è'
    await msg.message.edit_text(text=answer,
                                reply_markup=db_service.get_stop_words_reply_markup(msg.from_user.id))

    await states.GrabberSettings.delete_stop_word.set()


@dispatcher.callback_query_handler(filters.UserIsChannelSubscriber(),
                                   filters.UserWithSubscribe(),
                                   state=states.GrabberSettings.delete_stop_word)
async def delete_stop_word_handler(msg: CallbackQuery, state: FSMContext):
    answer = '‚úÖÔ∏è –°—Ç–æ–ø-—Å–ª–æ–≤–æ —É–¥–∞–ª–µ–Ω–æ'
    db_service.delete_stop_word(msg.data)
    await msg.answer(text=answer)

    await msg.message.edit_text(text=db_service.get_words_filters_menu(msg.from_user.id),
                                reply_markup=keyboards.words_filters)
    await state.finish()


@dispatcher.callback_query_handler(filters.UserIsChannelSubscriber(),
                                   filters.UserWithSubscribe(),
                                   lambda msg: msg.data == 'add_word_filter')
async def add_word_filter_handler(msg: CallbackQuery):
    answer = 'üöÄ –û—Ç–ø—Ä–∞–≤—å —Ñ–∏–ª—å—Ç—Ä-—Å–ª–æ–≤–æ'
    await msg.message.edit_text(text=answer)

    await states.GrabberSettings.add_filter_filtered_word.set()


@dispatcher.callback_query_handler(filters.UserIsChannelSubscriber(),
                                   filters.UserWithSubscribe(),
                                   lambda msg: msg.data == 'delete_word_filter')
async def delete_word_filter_handler(msg: CallbackQuery):
    answer = 'üóëÔ∏è –í—ã–±–µ—Ä–∏ —Ñ–∏–ª—å—Ç—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è'
    await msg.message.edit_text(text=answer,
                                reply_markup=db_service.get_words_filters_reply_markup(msg.from_user.id))

    await states.GrabberSettings.delete_word_filter.set()


@dispatcher.callback_query_handler(filters.UserIsChannelSubscriber(),
                                   filters.UserWithSubscribe(),
                                   state=states.GrabberSettings.delete_word_filter)
async def delete_word_filter_handler(msg: CallbackQuery, state: FSMContext):
    answer = '‚úÖÔ∏è –§–∏–ª—å—Ç—Ä —É–¥–∞–ª—ë–Ω'
    db_service.delete_word_filter(msg.data)
    await msg.answer(text=answer)

    await msg.message.edit_text(text=db_service.get_words_filters_menu(msg.from_user.id),
                                reply_markup=keyboards.words_filters)
    await state.finish()


@dispatcher.callback_query_handler(filters.UserIsChannelSubscriber(),
                                   filters.UserWithSubscribe(),
                                   lambda msg: msg.data == 'set_postfix',
                                   state='*')
async def add_postfix_handler(msg: CallbackQuery):
    await states.GrabberSettings.add_postfix.set()

    answer = 'üöÄ –û—Ç–ø—Ä–∞–≤—å –Ω–æ–≤—ã–π –ø–æ—Å—Ç—Ñ–∏–∫—Å'
    await msg.message.edit_text(text=answer)


@dispatcher.callback_query_handler(filters.UserIsChannelSubscriber(),
                                   filters.UserWithSubscribe(),
                                   lambda msg: msg.data == 'delete_postfix')
async def delete_postfix(msg: CallbackQuery):
    answer = 'üóëÔ∏è –ü–æ—Å—Ç—Ñ–∏–∫—Å —É–¥–∞–ª—ë–Ω'
    await msg.answer(text=answer)

    answer = db_service.delete_postfix(msg.from_user.id)

    await msg.message.edit_text(text=answer,
                                reply_markup=db_service.get_sources_reply_markup(msg.from_user.id))

    await states.GrabberSettings.delete_postfix.set()
