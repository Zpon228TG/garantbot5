from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

from tgbot.keyboards.inline_user import user_payments_kb, user_payment_kb
from tgbot.utils.const_functions import is_number


router = Router(name=__name__)


# –ö–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π.
class States(StatesGroup):
    get_sum = State()
    check_pay = State()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å".
@router.callback_query(F.data == "user_refill")
async def send_payments(callback: CallbackQuery) -> None:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å".\n
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery.\n
    –£–¥–∞–ª—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ —Å –≤—ã–±–æ—Ä–æ–º –ø–ª–∞—Ç–µ–∂–Ω–æ–π
    —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n """

    await callback.message.delete()

    await callback.message.answer(
        text="<b>üñ≤ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π</b>",
        reply_markup=user_payments_kb(),
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.
@router.callback_query(F.data.startswith("user_refill_method:"))
async def select_payment_system(callback: CallbackQuery, state: FSMContext) -> None:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.\n
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –æ–±—ä–µ–∫—Ç—ã –∫–ª–∞—Å—Å–∞ CallbackQuery –∏ FSMContext.\n
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ FSM –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ
    –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM: States.get_sum, —Ç–∞–∫–∂–µ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n """

    pay_method = callback.data.split(":")[1]

    await state.update_data(here_pay_method=pay_method)
    await state.set_state(States.get_sum)

    await callback.message.edit_text("<b>üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è</b>")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—É–º–º—ã –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é.
@router.message(F.text, States.get_sum)
async def get_amount(message: Message, state: FSMContext):
    amount = message.text
    data = await state.get_data()

    if is_number(amount):
        if float(amount) > MIN_AMOUNT:
            selected_payment_system = data.get('here_pay_method')
            api_system = payment_systems.get(selected_payment_system)
            payment_link = await api_system.generate_pay_link(amount=float(amount))

            await message.answer(
                text='–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ:\n\n' + payment_link,
                reply_markup=user_payment_kb(payment_url=payment_link),
            )
            await state.update_data(api_system=api_system)
            await state.set_state(States.check_pay)
        else:
            await message.answer(
                f"<b>‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è</b>\n"
                f"‚ùóÔ∏è–°—É–º–º–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ <code>{MIN_AMOUNT}‚ÇΩ</code> –∏ –±–æ–ª—å—à–µ <code>100 000‚ÇΩ</code>\n"
                f"üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ <b>–µ—â–µ —Ä–∞–∑:</b>",
            )
            await state.set_state(States.get_sum)

    else:
        await message.answer(
            "<b>‚ùå –î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ.</b>\n"
            "üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ <b>–µ—â–µ —Ä–∞–∑:</b>",
        )
        await state.set_state(States.get_sum)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É ‚úÖ"
@router.callback_query(States.check_pay, F.data == 'check_payment')
async def check_pay(callback: CallbackQuery, state: FSMContext) -> None:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É ‚úÖ".\n
    –í –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è –æ–±—ä–µ–∫—Ç—ã –∫–ª–∞—Å—Å–∞ CallbackQuery –∏ FSMContext.\n
    –£–¥–∞–ª—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã.
    –ü—Ä–∏ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –æ–ø–ª–∞—Ç–µ, –¥–µ–Ω—å–≥–∏ –∑–∞—á–∏—Å–ª—è—é—Ç—Å—è –Ω–∞ –±–∞–ª–∞–Ω—Å –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∏–≥—Ä–æ–≤–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –æ—á–∏—â–∞–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM.
    –ò–Ω–∞—á–µ, –ø—Ä–∏—Å—ã–ª–∞–µ—Ç—Å—è –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–Ω–æ–≤–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM.\n\n """

    data = await state.get_data()
    payment_system = data.get('api_system')
    payment_status = await payment_system.get_pay_status()

    if payment_status:
        await callback.message.delete()

        await callback.message.answer(
            text='‚úÖ –û—Ç–ª–∏—á–Ω–æ! –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!\n\n'
                 'üí∞ –î–µ–Ω—å–≥–∏ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –±–∞–ª–∞–Ω—Å. \n'
        )
        user = await MyRequests.get_line('Users', 'user_id', callback.from_user.id,)
        await MyRequests.update_items('Users', 'user_id', callback.from_user.id, balance=float(user.balance) + float(data.get('sum')))

        await send_profile(callback)

    else:
        await callback.message.answer('‚ùå <b>–û–ø–ª–∞—Ç–∞ –Ω–µ –±—ã–ª–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞, —Å–∫–æ—Ä–µ–µ –ø–æ–ø–æ–ª–Ω–∏ –±–∞–ª–∞–Ω—Å!</b>')

        await state.set_state(StatesProfile.check_pay)
